version: '3.3'

services:
  # 우선 속도가 느려서... 주석처리 
  # nodejs:
  #   # build:
  #   #   context: .
  #   #   dockerfile: Dockerfile
  #   image: node:8
  #   container_name: nodejs
  #   restart: unless-stopped
  #   env_file: .env
  #   environment:
  #     - MONGO_USERNAME=$MONGO_USERNAME
  #     - MONGO_PASSWORD=$MONGO_PASSWORD
  #     - MONGO_HOSTNAME=db
  #     - MONGO_PORT=$MONGO_PORT
  #     - MONGO_DB=$MONGO_DB
  #   ports:
  #     - "8080:3001"
  #   volumes:
  #     - .:/home/app
  #     - ./node_modules:/home/app/node_modules
  #   networks:
  #     - app-network
  #   depends_on:
  #     - db
  #   command: /home/app/node_modules/.bin/nodemon /home/app/bin/api.js
    
  mongo-db:
    image: mongo:latest
    container_name: mongo-db
    restart: unless-stopped
    env_file: .env
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db // 데이터를 계속 저장하고 싶으면, 주석 제거
      - ./mongo-dump:/home/mongo-dump #덤프파일 디렉토리
      - ./mongo-dump/import.sh:/docker-entrypoint-initdb.d/import.sh #덤프파일 리스토어 및 계정 생성
    networks:
      - app-network  
  mysql-db:
    image: mysql:latest
    container_name: mysql-db
    privileged: true
    command: --default-authentication-plugin=mysql_native_password #If a password error occurs, use the command.
    restart: always
    env_file: .env
    environment:
      MYSQL_DATABASE: $MYSQL_DATABASE
      # So you don't have to use root, but you can if you like
      MYSQL_USER: $MYSQL_USER
      # You can use whatever password you like
      MYSQL_PASSWORD: $MYSQL_PASSWORD
      # Password for root access
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_ALLOW_EMPTY_PASSWORD: $MYSQL_ALLOW_EMPTY_PASSWORD

    volumes: 
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app-network  
    
networks:
  app-network:
    driver: bridge

# 데이터를 계속 유지 하고 싶으면, 생성
volumes:
  mysql-data:
  mongo-data: